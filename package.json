{
  "author": {
    "name": "Aly Thobani",
    "email": "athobani9@gmail.com"
  },
  "publisher": "AlyThobani",
  "name": "region-helper",
  "displayName": "Region Helper",
  "description": "Easily navigate and visualize code regions in your files.",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other",
    "Visualization"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:javascript",
    "onLanguage:python",
    "onLanguage:cpp",
    "onLanguage:csharp",
    "onLanguage:java"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "region-helper.goToRegionBoundary",
        "title": "Go to Region Boundary"
      },
      {
        "command": "region-helper.selectCurrentRegion",
        "title": "Select Current Region"
      },
      {
        "command": "region-helper.goToRegionFromQuickPick",
        "title": "Go to Region"
      }
    ],
    "configuration": {
      "title": "Region Helper",
      "properties": {
        "region-helper.regionBoundaryPatterns": {
          "type": "object",
          "description": "Regular expressions to match region boundaries for different languages.",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "startRegex": {
                  "type": "string",
                  "description": "Regular expression string (passed into JavaScript RegExp constructor) to match the start of a region. Should ideally include a capturing group for the region name."
                },
                "endRegex": {
                  "type": "string",
                  "description": "Regular expression string (passed into JavaScript RegExp constructor) to match the end of a region."
                }
              },
              "required": [
                "startRegex",
                "endRegex"
              ]
            }
          },
          "default": {
            "typescript": [
              {
                "startRegex": "^\\s*\\/\\*\\*?\\s*#region(?:\\s+(.+?))?\\s*\\*\\/",
                "endRegex": "^\\s*\\/\\*\\*?\\s*#endregion\\s*\\*\\/"
              },
              {
                "startRegex": "^\\s*\\/\\/\\s*#region(?:\\s+(.+?))?$",
                "endRegex": "^\\s*\\/\\/\\s*#endregion\\s*$"
              }
            ],
            "javascript": [
              {
                "startRegex": "^\\s*\\/\\*\\*?\\s*#region(?:\\s+(.+?))?\\s*\\*\\/",
                "endRegex": "^\\s*\\/\\*\\*?\\s*#endregion\\s*\\*\\/"
              },
              {
                "startRegex": "^\\s*\\/\\/\\s*#region(?:\\s+(.+?))?$",
                "endRegex": "^\\s*\\/\\/\\s*#endregion\\s*$"
              }
            ],
            "python": [
              {
                "startRegex": "^\\s*#\\s*region\\s+(.*)$",
                "endRegex": "^\\s*#\\s*endregion"
              }
            ],
            "cpp": [
              {
                "startRegex": "^\\s*//\\s*#region\\s+(.*)$",
                "endRegex": "^\\s*//\\s*#endregion"
              }
            ],
            "csharp": [
              {
                "startRegex": "^\\s*//\\s*#region\\s+(.*)$",
                "endRegex": "^\\s*//\\s*#endregion"
              }
            ],
            "java": [
              {
                "startRegex": "^\\s*//\\s*#region\\s+(.*)$",
                "endRegex": "^\\s*//\\s*#endregion"
              }
            ]
          }
        }
      }
    },
    "keybindings": [
      {
        "command": "region-helper.goToRegionBoundary",
        "key": "alt+m",
        "when": "editorTextFocus"
      },
      {
        "command": "region-helper.selectCurrentRegion",
        "key": "alt+shift+m",
        "when": "editorTextFocus"
      },
      {
        "command": "region-helper.goToRegionFromQuickPick",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "editorTextFocus"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "regionHelperTreeView",
          "name": "Regions"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run lint",
    "compile": "webpack --config webpack.config.ts",
    "watch": "webpack --config webpack.config.ts --watch",
    "compile-tests": "webpack --config webpack.test.config.ts",
    "watch-tests": "webpack --config webpack.test.config.ts --watch",
    "package": "vsce package",
    "pretest": "npm run compile-tests && npm run lint",
    "lint": "eslint src",
    "test": "rm -rf .vscode-test/user-data && vscode-test"
  },
  "devDependencies": {
    "@eslint/js": "^9.20.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.97.0",
    "@types/webpack": "^5.28.5",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "copy-webpack-plugin": "^12.0.2",
    "eslint": "^9.20.1",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.24.0",
    "webpack": "^5.91.0",
    "webpack-cli": "^5.1.4"
  }
}
